{"ast":null,"code":"// Next.js API route support: https://nextjs.org/docs/api-routes/introduction\nimport axios from \"axios\";\n\nfunction scrape(req, res) {\n  if (req.method === \"POST\") {\n    const {\n      urls\n    } = req.body;\n    const cleanedUrls = urls.split(\",\").map(rawUrl => {\n      const url = rawUrl.trim();\n\n      if (url.startsWith(\"http\")) {\n        return url;\n      }\n\n      return \"https://\".concat(url);\n    });\n    console.log(\"mapping over cleaned urls\");\n    const promiseArray = cleanedUrls.map(url => axios(url));\n    const combinedPromise = Promise.allSettled(promiseArray);\n    console.log(\"after promise.allSettled\");\n    combinedPromise.then(allResults => {\n      console.log(\".then handler: promises have resolved\");\n      const formattedResponse = allResults.map((result, index) => {\n        var _result$value, _result$reason;\n\n        return {\n          url: cleanedUrls[index],\n          html: (_result$value = result.value) === null || _result$value === void 0 ? void 0 : _result$value.data,\n          error: (_result$reason = result.reason) === null || _result$reason === void 0 ? void 0 : _result$reason.message\n        };\n      });\n      res.status(200).json(formattedResponse);\n    });\n    console.log(\"end of scraped function\");\n  }\n}\n\nexport default scrape;","map":{"version":3,"sources":["/Users/steph/Desktop/coding-challenge/pages/api/scrape.js"],"names":["axios","scrape","req","res","method","urls","body","cleanedUrls","split","map","rawUrl","url","trim","startsWith","concat","console","log","promiseArray","combinedPromise","Promise","allSettled","then","allResults","formattedResponse","result","index","html","value","data","error","reason","message","status","json"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAM;AAAEC,MAAAA;AAAF,QAAWH,GAAG,CAACI,IAArB;AAEA,UAAMC,WAAW,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgBC,GAAhB,CAAqBC,MAAD,IAAY;AAClD,YAAMC,GAAG,GAAGD,MAAM,CAACE,IAAP,EAAZ;;AACA,UAAID,GAAG,CAACE,UAAJ,CAAe,MAAf,CAAJ,EAA4B;AAC1B,eAAOF,GAAP;AACD;;AACD,aAAO,WAAWG,MAAX,CAAkBH,GAAlB,CAAP;AACD,KANmB,CAApB;AAQAI,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,UAAMC,YAAY,GAAGV,WAAW,CAACE,GAAZ,CAAiBE,GAAD,IAASX,KAAK,CAACW,GAAD,CAA9B,CAArB;AAEA,UAAMO,eAAe,GAAGC,OAAO,CAACC,UAAR,CAAmBH,YAAnB,CAAxB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAEAE,IAAAA,eAAe,CAACG,IAAhB,CAAsBC,UAAD,IAAgB;AACnCP,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACA,YAAMO,iBAAiB,GAAGD,UAAU,CAACb,GAAX,CAAe,CAACe,MAAD,EAASC,KAAT;AAAA;;AAAA,eAAoB;AAC3Dd,UAAAA,GAAG,EAAEJ,WAAW,CAACkB,KAAD,CAD2C;AAE3DC,UAAAA,IAAI,mBAAEF,MAAM,CAACG,KAAT,kDAAE,cAAcC,IAFuC;AAG3DC,UAAAA,KAAK,oBAAEL,MAAM,CAACM,MAAT,mDAAE,eAAeC;AAHqC,SAApB;AAAA,OAAf,CAA1B;AAKA5B,MAAAA,GAAG,CAAC6B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBV,iBAArB;AACD,KARD;AASAR,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;AACF;;AAED,eAAef,MAAf","sourcesContent":["// Next.js API route support: https://nextjs.org/docs/api-routes/introduction\nimport axios from \"axios\";\n\nfunction scrape(req, res) {\n  if (req.method === \"POST\") {\n    const { urls } = req.body;\n\n    const cleanedUrls = urls.split(\",\").map((rawUrl) => {\n      const url = rawUrl.trim();\n      if (url.startsWith(\"http\")) {\n        return url;\n      }\n      return \"https://\".concat(url);\n    });\n\n    console.log(\"mapping over cleaned urls\");\n    const promiseArray = cleanedUrls.map((url) => axios(url));\n\n    const combinedPromise = Promise.allSettled(promiseArray);\n    console.log(\"after promise.allSettled\");\n\n    combinedPromise.then((allResults) => {\n      console.log(\".then handler: promises have resolved\");\n      const formattedResponse = allResults.map((result, index) => ({\n        url: cleanedUrls[index],\n        html: result.value?.data,\n        error: result.reason?.message,\n      }));\n      res.status(200).json(formattedResponse);\n    });\n    console.log(\"end of scraped function\");\n  }\n}\n\nexport default scrape;\n"]},"metadata":{},"sourceType":"module"}
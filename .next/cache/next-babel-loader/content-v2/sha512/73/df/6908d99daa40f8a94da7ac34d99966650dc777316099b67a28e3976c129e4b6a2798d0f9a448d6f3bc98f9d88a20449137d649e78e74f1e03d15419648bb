{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/steph/Desktop/coding-challenge/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/steph/Desktop/coding-challenge/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/steph/Desktop/coding-challenge/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport Card from \"../components/Card\";\nimport styles from \"../styles/Home.module.scss\";\n\nfunction Home() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      urls = _useState[0],\n      setUrls = _useState[1];\n\n  var _useState2 = useState([]),\n      results = _useState2[0],\n      setResults = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n          var response, data;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  event.preventDefault();\n                  _context.next = 3;\n                  return fetch(\"/api/scrape\", {\n                    method: \"POST\",\n                    headers: {\n                      \"Content-Type\": \"text/plain\"\n                    },\n                    body: urls\n                  });\n\n                case 3:\n                  response = _context.sent;\n                  console.log({\n                    response: response\n                  });\n                  _context.next = 7;\n                  return response.json();\n\n                case 7:\n                  data = _context.sent;\n                  console.log({\n                    data: data\n                  });\n                  setResults(data);\n                  setUrls(\"\");\n\n                case 11:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"url\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.instructions,\n          children: \"Input URL(s) to view raw HTML. Separate URLs with a comma.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"url\",\n          value: urls,\n          onChange: function onChange(event) {\n            return setUrls(event.target.value);\n          },\n          className: styles.urlInput,\n          placeholder: \"www.google.com, www.nasa.gov\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          disabled: urls === \"\",\n          className: styles.submitButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.cardList,\n      children: results.map(function (result) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            url: result.url,\n            html: result.html,\n            error: result.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, _this)\n        }, result.url, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"oo1tz1Blw7q+HP8z1rg172jglZU=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/steph/Desktop/coding-challenge/pages/index.js"],"names":["React","useState","Layout","Card","styles","Home","urls","setUrls","results","setResults","event","preventDefault","fetch","method","headers","body","response","console","log","json","data","instructions","target","value","urlInput","submitButton","cardList","map","result","url","html","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport Card from \"../components/Card\";\nimport styles from \"../styles/Home.module.scss\";\n\nfunction Home() {\n  const [urls, setUrls] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n  return (\n    <Layout>\n      <form\n        onSubmit={async (event) => {\n          event.preventDefault();\n\n          const response = await fetch(\"/api/scrape\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"text/plain\" },\n            body: urls,\n          });\n          console.log({ response });\n\n          const data = await response.json();\n          console.log({ data });\n          setResults(data);\n          setUrls(\"\");\n        }}\n      >\n        <label htmlFor=\"url\">\n          <div className={styles.instructions}>\n            Input URL(s) to view raw HTML. Separate URLs with a comma.\n          </div>\n\n          <input\n            type=\"text\"\n            name=\"url\"\n            value={urls}\n            onChange={(event) => setUrls(event.target.value)}\n            className={styles.urlInput}\n            placeholder=\"www.google.com, www.nasa.gov\"\n          />\n        </label>\n\n        <div>\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n            disabled={urls === \"\"}\n            className={styles.submitButton}\n          />\n        </div>\n      </form>\n\n      <ul className={styles.cardList}>\n        {results.map((result) => (\n          <li key={result.url}>\n            <Card url={result.url} html={result.html} error={result.error} />\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/steph/Desktop/coding-challenge/pages/index.js\";\nimport { useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport styles from \"../styles/Home.module.scss\";\nimport Card from \"../components/Card\";\nexport default function Home() {\n  const {\n    0: urls,\n    1: setUrls\n  } = useState(\"\");\n  const {\n    0: results,\n    1: setResults\n  } = useState([]);\n  const {\n    0: error,\n    1: setError\n  } = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async event => {\n        event.preventDefault();\n        const response = await fetch(\"/api/scrape\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            urls\n          })\n        });\n\n        if (response.ok === false) {\n          setError(\"Error: please check that you have a valid URL.\");\n          return;\n        }\n\n        const data = await response.json();\n        console.log({\n          data\n        });\n        setResults(data);\n        setUrls(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"url\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.instructions,\n          children: [\" \", \"Input URL to view raw HTML. Separate URLs with a comma.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"url\",\n          value: urls,\n          onChange: event => setUrls(event.target.value),\n          className: styles.urlInput,\n          placeholder: \"www.google.com, www.nasa.gov\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          className: styles.submitButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.cardList,\n      children: results.map(result => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          url: result.url,\n          html: result.html,\n          error: result.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, result.url, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/steph/Desktop/coding-challenge/pages/index.js"],"names":["useState","Layout","styles","Card","Home","urls","setUrls","results","setResults","error","setError","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","instructions","target","value","urlInput","submitButton","cardList","map","result","url","html"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACS,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEA,sBACE,QAAC,MAAD;AAAA,4BACE;AACE,MAAA,QAAQ,EAAE,MAAOW,KAAP,IAAiB;AACzBA,QAAAA,KAAK,CAACC,cAAN;AAEA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAgB;AAC1CC,UAAAA,MAAM,EAAE,MADkC;AAE1CC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB,WAFiC;AAG1CC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEd,YAAAA;AAAF,WAAf;AAHoC,SAAhB,CAA5B;;AAMA,YAAIQ,QAAQ,CAACO,EAAT,KAAgB,KAApB,EAA2B;AACzBV,UAAAA,QAAQ,CAAC,gDAAD,CAAR;AACA;AACD;;AACD,cAAMW,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAnB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,UAAAA;AAAF,SAAZ;AACAb,QAAAA,UAAU,CAACa,IAAD,CAAV;AACAf,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD,OAlBH;AAAA,8BAoBE;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEJ,MAAM,CAACuB,YAAvB;AAAA,qBACG,GADH;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,KAFP;AAGE,UAAA,KAAK,EAAEpB,IAHT;AAIE,UAAA,QAAQ,EAAGM,KAAD,IAAWL,OAAO,CAACK,KAAK,CAACe,MAAN,CAAaC,KAAd,CAJ9B;AAKE,UAAA,SAAS,EAAEzB,MAAM,CAAC0B,QALpB;AAME,UAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF,eAoCE;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC,QAA3B;AAAoC,UAAA,SAAS,EAAE1B,MAAM,CAAC2B;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApCF,eAwCE;AAAK,QAAA,SAAS,EAAE3B,MAAM,CAACO,KAAvB;AAAA,kBAA+BA;AAA/B;AAAA;AAAA;AAAA;AAAA,cAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA4CE;AAAI,MAAA,SAAS,EAAEP,MAAM,CAAC4B,QAAtB;AAAA,gBACGvB,OAAO,CAACwB,GAAR,CAAaC,MAAD,iBACX;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,MAAM,CAACC,GAAlB;AAAuB,UAAA,IAAI,EAAED,MAAM,CAACE,IAApC;AAA0C,UAAA,KAAK,EAAEF,MAAM,CAACvB;AAAxD;AAAA;AAAA;AAAA;AAAA;AADF,SAASuB,MAAM,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD","sourcesContent":["import { useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport styles from \"../styles/Home.module.scss\";\nimport Card from \"../components/Card\";\n\nexport default function Home() {\n  const [urls, setUrls] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  return (\n    <Layout>\n      <form\n        onSubmit={async (event) => {\n          event.preventDefault();\n\n          const response = await fetch(\"/api/scrape\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ urls }),\n          });\n\n          if (response.ok === false) {\n            setError(\"Error: please check that you have a valid URL.\");\n            return;\n          }\n          const data = await response.json();\n          console.log({ data });\n          setResults(data);\n          setUrls(\"\");\n        }}\n      >\n        <label htmlFor=\"url\">\n          <div className={styles.instructions}>\n            {\" \"}\n            Input URL to view raw HTML. Separate URLs with a comma.\n          </div>\n\n          <input\n            type=\"text\"\n            name=\"url\"\n            value={urls}\n            onChange={(event) => setUrls(event.target.value)}\n            className={styles.urlInput}\n            placeholder=\"www.google.com, www.nasa.gov\"\n          />\n        </label>\n\n        <div>\n          <input type=\"submit\" value=\"Submit\" className={styles.submitButton} />\n        </div>\n\n        <div className={styles.error}>{error}</div>\n      </form>\n\n      <ul className={styles.cardList}>\n        {results.map((result) => (\n          <li key={result.url}>\n            <Card url={result.url} html={result.html} error={result.error} />\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}